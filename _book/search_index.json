[
["discrete-variables.html", "Chapter 4 Discrete Variables ", " Chapter 4 Discrete Variables "],
["chi-square-test.html", "4.1 Chi-Square Test", " 4.1 Chi-Square Test These notes rely on PSU STAT 500, Wikipedia, and Disha M]. The chi-square test compares observed categorical variable frequency counts \\(O\\) with their expected values \\(E\\). The test statistic \\(X^2 = \\sum (O - E)^2 / E\\) is distributed \\(\\chi^2\\). \\(H_0: O = E\\) and \\(H_a\\) is at least one pair of frequency counts differ. The chi-square test relies on the central limit theorem, so it is valid for independent, normally distributed samples, typically affirmed with at least 5 successes and failures in each cell. There a small variations in the chi-square for its various applications. The chi-square goodness-of-fit test tests whether observed frequency counts \\(O_j\\) of the \\(j \\in (0, 1, \\cdots k)\\) levels of a single categorical variable differ from expected frequency counts \\(E_j\\). \\(H_0\\) is \\(O_j = E_j\\). The chi-square independence test tests whether observed joint frequency counts \\(O_{ij}\\) of the \\(i \\in (0, 1, \\cdots I)\\) levels of categorical variable \\(Y\\) and the \\(j \\in (0, 1, \\cdots J)\\) levels of categorical variable \\(Z\\) differ from expected frequency counts \\(E_{ij}\\) under the independence model where \\(\\pi_{ij} = \\pi_{i+} \\pi_{+j}\\), the joint densities. \\(H_0\\) is \\(O_{ij} = E_{ij}\\). The chi-square homogeneity test tests whether frequency counts of the \\(R\\) levels of a categorical variable are distributed identically across \\(C\\) different populations. "],
["one-way-tables.html", "4.2 One-Way Tables", " 4.2 One-Way Tables These notes rely on PSU STATS 504 course notes. A one-way table is a frequency table for a single categorical variable. You usually construct a one-way table to test whether the frequency counts differ from a hypothesized distribution using the chi-square goodness-of-fit test. You may also simply want to construct a confidence interval around a proportion. Here is an example. A researcher crosses tall cut-leaf tomatoes with dwarf potato-leaf tomatoes, then classifies the (\\(n = 1,611\\)) offspring phenotypes. o &lt;- c(926, 288, 293, 104) cell_names &lt;- c(&quot;tall cut-leaf&quot;, &quot;tall potato-leaf&quot;, &quot;dwarf cut-leaf&quot;, &quot;dwarf potato-leaf&quot;) names(o) &lt;- cell_names print(o) ## tall cut-leaf tall potato-leaf dwarf cut-leaf dwarf potato-leaf ## 926 288 293 104 The four phenotypes are expected to occur with relative frequencies 9:3:3:1. pi &lt;- c(9, 3, 3, 1) / (9 + 3 + 3 + 1) print(pi) ## [1] 0.5625 0.1875 0.1875 0.0625 e &lt;- sum(o) * pi names(e) &lt;- cell_names print(e) ## tall cut-leaf tall potato-leaf dwarf cut-leaf dwarf potato-leaf ## 906.1875 302.0625 302.0625 100.6875 data.frame(O = o, E = e) %&gt;% rownames_to_column(var = &quot;i&quot;) %&gt;% pivot_longer(cols = -i, values_to = &quot;freq&quot;) %&gt;% group_by(name) %&gt;% mutate(pct = freq / sum(freq)) %&gt;% ungroup() %&gt;% ggplot(aes(x = i, y = freq, fill = name, label = paste0(round(freq, 0), &quot;\\n&quot;, scales::percent(pct, accuracy = 0.1))) ) + geom_col(position = position_dodge()) + geom_text(position = position_dodge(width = 0.9), size = 2.8) + theme_mf() + scale_fill_mf() + labs(title = &quot;Observed vs Expected&quot;, fill = &quot;&quot;) Do the observed phenotype counts conform to the expected proportions? This is a goodness-of-fit question because you are comparing frequencies from a single categorical variable to a set of hypothesized frequencies. 4.2.1 Chi-Square Goodness-of-Fit Test The chi-square goodness-of-fit test tests whether observed frequency counts \\(O_j\\) of the \\(J\\) levels of a categorical variable differ from expected frequency counts \\(E_j\\) in a sample. \\(H_0\\) is \\(O_j = E_j\\). There are two possible test statistics for this test, Pearson \\(X^2\\) and deviance \\(G^2\\). The sampling distributions of \\(X^2\\) and \\(G^2\\) approach the \\(\\chi_{J-1}^2\\) as the sample size \\(n \\rightarrow \\infty\\). It’s a good idea to calculate both test statistics. The Pearson goodness-of-fit statistic is \\[X^2 = \\sum \\frac{(O_j - E_j)^2}{E_j}\\] where \\(O_j = p_j n\\) and \\(E_j = \\pi_j n\\). There is a variation of the \\(X^2\\) statistic that corrects for small cell counts by subtracting 0.5 from each cell, the Yates Continuity Correction. \\[X^2 = \\sum \\frac{(O_j - E_j - 0.5)^2}{E_j}\\] The deviance statistic, aka likelihood-ratio chi-square test statistic, is \\[G^2 = 2 \\sum O_j \\log \\left[ \\frac{O_j}{E_j} \\right]\\] If the saturated model (the observed data represent the fit of the saturated model, the most complex model possible with the data) proportions \\(p_j\\) equal equal the expected proportions \\(\\pi_j\\), \\(X^2\\) and \\(G^2\\) will equal zero. Large values indicate the data do not agree well with the proposed model. You can perform a chi-square test of significance with the \\(G^2\\) and \\(X^2\\) test statistics with \\(dof\\) degrees of freedom (d.f.). The chi-square test is reliable when at least 80% of \\(E_j &gt;= 5\\). Calculate \\(X^2\\) as x2 &lt;- sum((o - e)^2 / e) = 1.468722 and the \\(G^2\\) as g2 &lt;- 2 * sum(o * log(o / e)) = 1.4775868. The degrees of freedom are length(o) - 1 = 3. The chi-sq test p-values are nearly identical. pchisq(q = x2, df = dof, lower.tail = FALSE) ## [1] 0.6895079 pchisq(q = g2, df = dof, lower.tail = FALSE) ## [1] 0.6874529 chisq.test() performs the chi-square test of the Pearson test statistic. chisq.test(o, p = pi) ## ## Chi-squared test for given probabilities ## ## data: o ## X-squared = 1.4687, df = 3, p-value = 0.6895 The p-values based on the \\(\\chi^2\\) distribution with 3 d.f. are about 0.69, so the test fails to reject the null hypothesis that the observed frequencies are consistent with the theory. The plot of the chi-squared distribution shows \\(X^2\\) well outside the \\(\\alpha = 0.05\\) range of rejection. alpha &lt;- 0.05 dof &lt;- length(e) - 1 lrr = -Inf p_val &lt;- pchisq(q = x2, df = length(o) - 1, lower.tail = FALSE) urr = qchisq(p = alpha, df = dof, lower.tail = FALSE) data.frame(chi2 = seq(from = 0, to = 20, by = .1)) %&gt;% mutate(density = dchisq(x = chi2, df = dof)) %&gt;% mutate(rr = ifelse(chi2 &lt; lrr | chi2 &gt; urr, density, 0)) %&gt;% ggplot() + geom_line(aes(x = chi2, y = density), color = mf_pal(12)(12)[12], size = 0.8) + geom_area(aes(x = chi2, y = rr), fill = mf_pal(12)(12)[2], alpha = 0.8) + geom_vline(aes(xintercept = x2), color = mf_pal(12)(12)[11], size = 0.8) + labs(title = bquote(&quot;Chi-Square Goodness-of-Fit Test&quot;), subtitle = paste0(&quot;X^2=&quot;, round(x2,2), &quot;, &quot;, &quot;Critical value=&quot;, round(urr,2), &quot;, &quot;, &quot;p-value=&quot;, round(p_val,3), &quot;.&quot; ), x = &quot;chisq&quot;, y = &quot;Density&quot;) + theme(legend.position=&quot;none&quot;) + theme_mf() If you reject \\(H_0\\), you can inspect the residuals to learn which differences may have lead to rejecting the rejection. \\(X^2\\) and \\(G^2\\) are sums of squared cell comparisons, or “residuals”. The expected value of a \\(\\chi^2\\) random variable is its d.f., \\(k - 1\\), so the average residual size is \\((k - 1) / k\\). The typical residual should be within 2 \\(\\sqrt{(k - 1) / k}\\). e2_res &lt;- sqrt((o - e)^2 / e) g2_res &lt;- sign(o - e) * sqrt(abs(2 * o * log(o / e))) data.frame(e2_res) %&gt;% rownames_to_column() %&gt;% # pivot_longer(cols = e2_res:g2_res) %&gt;% ggplot(aes(x = rowname, y = e2_res)) + geom_point(size = 3, color = mf_pal(12)(12)[2], alpha = 0.8) + theme_mf() + labs(title = &quot;X^2 Residuals by Cell&quot;, color = &quot;&quot;, x = &quot;&quot;, y = &quot;&quot;) If you want to test whether the data conform to a particular distribution instead of some set of theoretical values, the test is nearly the same except for an adjustment to the d.f. Your first step is the estimate the distribution’s parameter(s). Then you perform the goodness of fit test, but with degrees of freedom reduced for each estimated parameter. For example, suppose you sample \\(n = 100\\) families and count the number of children. The count of children should be a Poisson random variable, \\(J \\sim Pois(\\lambda)\\). dat &lt;- data.frame(j = 0:5, o = c(19, 26, 29, 13, 10, 3)) The ML estimate for \\(\\lambda\\) is \\[\\hat{\\lambda} = \\frac{j_0 O_0 + j_1 O_1, + \\cdots j_k O_k}{O}\\] lambda_hat &lt;- sum(dat$j * dat$o) / sum(dat$o) print(lambda_hat) ## [1] 1.78 The probabilities for each possible count are \\[f(j; \\lambda) = \\frac{e^{-\\hat{\\lambda}} \\hat{\\lambda}^j}{j!}.\\] f &lt;- exp(-lambda_hat) * lambda_hat^dat$j / factorial(dat$j) E &lt;- f * sum(dat$o) dat &lt;- cbind(dat, e = E) dat %&gt;% rename(pois = e) %&gt;% pivot_longer(cols = -j, values_to = &quot;freq&quot;) %&gt;% group_by(name) %&gt;% mutate(pct = freq / sum(freq)) %&gt;% ungroup() %&gt;% ggplot(aes(x = fct_inseq(as.factor(j)), y = freq, fill = name, label = paste0(round(freq, 0), &quot;\\n&quot;, scales::percent(pct, accuracy = 0.1))) ) + geom_col(position = position_dodge()) + geom_text(position = position_dodge(width = 0.9), size = 2.8) + theme_mf() + scale_fill_mf() + labs(title = &quot;Observed vs Expected&quot;, fill = &quot;&quot;, x = &quot;children in family&quot;) Compare the expected values to the observed values with the \\(\\chi^2\\) goodness of fit test. In this case, \\(df = 6 - 1 - 1\\) because the estimated paramater \\(\\lambda\\) reduces d.f. by 1. (X2 &lt;- sum((dat$o - dat$e)^2 / dat$e)) ## [1] 2.842215 (dof &lt;- nrow(dat) - 1 - 1) ## [1] 4 pchisq(q = X2, df = dof) ## [1] 0.4154322 Be careful of this adjustment to the d.f. because chisq.test() does not take this into account, and you cannot override the d.f.. chisq.test(dat$o, p = dat$e / sum(dat$e)) ## Warning in chisq.test(dat$o, p = dat$e/sum(dat$e)): Chi-squared approximation ## may be incorrect ## ## Chi-squared test for given probabilities ## ## data: dat$o ## X-squared = 2.8044, df = 5, p-value = 0.7301 4.2.2 Proportion Test A special case of the one-way table is the \\(2 \\times 1\\) table for a binomial random variable. When you calculate a single proportion \\(p\\), you can compare it to a hypothesized \\(\\pi_0\\), or create a confidence interval around the estimate. Suppose a company claims to resolve at least 70% of maintenance requests within 24 hours. In a random sample of \\(n = 50\\) repair requests, the company resolves \\(O_1 = 33\\) (\\(p_1 = 66\\%)\\) within 24 hours. At a 5% level of significance, is the maintenance company’s claim valid? o &lt;- c(33, 17) n &lt;- sum(o) cell_names &lt;- c(&quot;resolved&quot;, &quot;not resolved&quot;) names(o) &lt;- cell_names print(o) ## resolved not resolved ## 33 17 The null hypothesis is that the maintenance company resolves \\(\\pi_0 = 0.70\\) of requests within 24 hours, \\(H_0: \\pi = \\pi_0\\) with alternative hypothesis \\(H_a: \\pi &lt; \\pi_0\\). This is a left-tailed test with an \\(\\alpha = 0.05\\) level of significance. pi_0 &lt;- 0.70 alpha &lt;- 0.05 The sample is independently drawn without replacement from &lt;10% of the population (by assumption) and there were &gt;=5 successes, so you can use the Clopper-Pearson exact binomial test. Clopper-Pearson inverts two single-tailed binomial tests at the desired alpha. binom.test(x = o, p = pi_0, alternative = &quot;less&quot;, conf.level = 1 - alpha) ## ## Exact binomial test ## ## data: o ## number of successes = 33, number of trials = 50, p-value = 0.3161 ## alternative hypothesis: true probability of success is less than 0.7 ## 95 percent confidence interval: ## 0.000000 0.770452 ## sample estimates: ## probability of success ## 0.66 There is insufficient evidence (p = 0.3161) to reject \\(H_0\\) that true probability of success is less than 0.7. x &lt;- c(0:50) p_x &lt;- dbinom(x = x, size = n, prob = pi_0) observed &lt;- factor(if_else(x == o[1], 1, 0)) data.frame(x, p_x, observed) %&gt;% ggplot(aes(x = x, y = p_x, fill = observed)) + geom_col() + theme_mf() + scale_fill_mf() + labs(title = &quot;Exact Binomial&quot;) There were &gt;=5 failures, &gt;=30 observations, and the measured probability of success was within (.2,.80), so you can also use the Wald normal approximation method where \\(\\pi = p \\pm z_{\\alpha/2} SE\\) and \\(Z = (p - \\pi_0) / SE\\) where \\(SE = \\sqrt{\\pi_0 (1 - \\pi_0) / n}\\). p &lt;- o[1] / sum(o) se &lt;- sqrt(pi_0 * (1 - pi_0) / sum(o)) z &lt;- (p - pi_0) / se pnorm(q = p, mean = pi_0, sd = se, lower.tail = TRUE) ## resolved ## 0.268547 Again, there is insufficient evidence (p = 0.2685) to reject \\(H_0\\) that true probability of success is less than 0.7. The 95% CI around the measured p = 0.66 is z_alpha &lt;- qnorm(0.95, mean = p, sd = se, lower.tail = FALSE) c(0, p + z_alpha * se) ## resolved ## 0.0000000 0.6958645 "],
["two-way-tables.html", "4.3 Two-Way Tables", " 4.3 Two-Way Tables These notes rely on PSU STATS 504 course notes. A two-way frequency table is a frequency table for two categorical variables. You usually construct a two-way table to test whether the frequency counts in one categorical variable differ from the other categorical variable using the chi-square independence test. If there is a significant difference (i.e., the variables are related), then describe the relationship with an analysis of the residuals, calculations of measures of association (difference in proportions, relative risk, or odds ratio), and partition tests. Here are three case studies that illustrate the concepts. The first is a simple 2x2 table. The second is a 3x2 table that extends some of the concepts. The third is a 2x4 table where one factor is ordinal. Study 1: “Vitamin C” 2x2 Table. A double blind study investigated whether vitamin C prevents common colds on a sample of n = 279 persons. This study has two categorical variables each with two levels, a 2x2 two way table. vitc_o &lt;- matrix( c(31, 17, 109, 122), ncol = 2, dimnames = list( treat = c(&quot;Placebo&quot;, &quot;VitaminC&quot;), resp = c(&quot;Cold&quot;, &quot;NoCold&quot;) ) ) vitc_o %&gt;% data.frame() %&gt;% rownames_to_column(var = &quot; &quot;) %&gt;% janitor::adorn_totals(where = c(&quot;row&quot;, &quot;col&quot;)) ## Cold NoCold Total ## Placebo 31 109 140 ## VitaminC 17 122 139 ## Total 48 231 279 Study 2: “Smoking” 3x2 Table. An analysis classifies n = 5375 high school students by their smoking behavior and the smoking behavior of their parents. smoke_o &lt;- matrix( c(400, 416, 188, 1380, 1823, 1168), ncol = 2, dimnames = list( parents = c(&quot;Both&quot;, &quot;One&quot;, &quot;Neither&quot;), student = c(&quot;Smoker&quot;, &quot;Non-smoker&quot;)) ) smoke_o %&gt;% data.frame() %&gt;% rownames_to_column(var = &quot; &quot;) %&gt;% janitor::adorn_totals(where = c(&quot;row&quot;, &quot;col&quot;)) ## Smoker Non.smoker Total ## Both 400 1380 1780 ## One 416 1823 2239 ## Neither 188 1168 1356 ## Total 1004 4371 5375 Study 3: “Coronary Heart Disease” Ordinal Table. A study of classified n = 1329 patients by cholesterol level and whether they had been diagnosed with coronary heart disease (CHD). # tribble() is a little easier. chd_o &lt;- tribble( ~L_0_199, ~L_200_219, ~L_220_259, ~L_260p, 12, 8, 31, 41, 307, 246, 439, 245 ) %&gt;% as.matrix() rownames(chd_o) &lt;- c(&quot;CHD&quot;, &quot;No CHD&quot;) chd_o %&gt;% data.frame() %&gt;% rownames_to_column(var = &quot; &quot;) %&gt;% janitor::adorn_totals(where = c(&quot;row&quot;, &quot;col&quot;)) ## L_0_199 L_200_219 L_220_259 L_260p Total ## CHD 12 8 31 41 92 ## No CHD 307 246 439 245 1237 ## Total 319 254 470 286 1329 4.3.1 Chi-Square Independence Test The chi-square independence test tests whether observed joint frequency counts \\(O_{ij}\\) differ from expected frequency counts \\(E_{ij}\\) under the independence model (the model of independent explanatory variables, \\(\\pi_{ij} = \\pi_{i+} \\pi_{+j}\\). \\(H_0\\) is \\(O_{ij} = E_{ij}\\). There are two possible test statistics for this test, Pearson \\(X^2\\) (and the continuity adjusted \\(X^2\\)), and deviance \\(G^2\\). As \\(n \\rightarrow \\infty\\) their sampling distributions approach \\(\\chi_{df}^2\\) with degrees of freedom (df) equal to the saturated model df \\(I \\times J - 1\\) minus the independence model df \\((I - 1) + (J - 1)\\), which you can algebraically solve for \\(df = (I - 1)(J - 1)\\). The Pearson goodness-of-fit statistic is \\[X^2 = \\sum \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}\\] where \\(O_{ij}\\) is the observed count, and \\(E_{ij}\\) is the product of the row and column marginal probabilities. For the Vitamin C study, \\(X^2\\) is vitc_e &lt;- sum(vitc_o) * prop.table(vitc_o, 1) * prop.table(vitc_o, 2) X2 &lt;- sum((vitc_o - vitc_e)^2 / vitc_e) print(X2) ## [1] 4.811413 and the deviance statistic is \\[G^2 = 2 \\sum_{ij} O_{ij} \\log \\left( \\frac{O_{ij}}{E_{ij}} \\right)\\] G2 &lt;- - 2 * sum(vitc_o * log(vitc_o / vitc_e)) print(G2) ## [1] 4.871697 \\(X^2\\) and \\(G^2\\) increase with the disagreement between the saturated model proportions \\(p_{ij}\\) and the independence model proportions \\(\\pi_{ij}\\). The degrees of freedom is vitc_dof &lt;- (nrow(vitc_o) - 1) * (ncol(vitc_o) - 1) print(vitc_dof) ## [1] 1 The associated p-values are pchisq(q = G2, df = vitc_dof, lower.tail = FALSE) ## [1] 0.02730064 pchisq(q = X2, df = vitc_dof, lower.tail = FALSE) ## [1] 0.02827186 The chisq.test() function applies the Yates continuity correcton by default to correct for situations with small cell counts. The Yates continuity correction subtracts 0.5 from the \\(O_{ij} - E_{ij}\\) differences. Set correct = FALSE to suppress Yates. vitc_chisq_test &lt;- chisq.test(vitc_o, correct = FALSE) print(vitc_chisq_test) ## ## Pearson&#39;s Chi-squared test ## ## data: vitc_o ## X-squared = 4.8114, df = 1, p-value = 0.02827 The Yates correction yields more conservative p-values. chisq.test(vitc_o) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: vitc_o ## X-squared = 4.1407, df = 1, p-value = 0.04186 These p-values are evidence for rejecting the independence model. Here is the chi-square test applied to the CHD data. Recall this data set is 4x2, so the degrees of freedom are \\((4-1)(2-1) = 3\\). The Yates continuity correction does not apply to data other than 2x2, so the correct = c(TRUE, FALSE) has no effect in chisq.test(). (chd_chisq_test &lt;- chisq.test(chd_o)) ## ## Pearson&#39;s Chi-squared test ## ## data: chd_o ## X-squared = 35.028, df = 3, p-value = 1.202e-07 The p-value is very low, so reject the null hypothesis of independence. This demonstrates that a relationship exists between cholesterol and CHD. Now you should describe that relationship by evaluating the (i) residuals, (ii) measures of association, and (iii) partitioning chi-square. 4.3.2 Residuals Analysis If the chi-squared independence test rejects \\(H_0\\) of identical frequency distributions, the next step is to identify which cells may be driving the lack of fit. The Pearson residuals in the two-way table are \\[r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}}}\\] where \\(X^2 = \\sum{r_{ij}}\\). The \\(r_{ij}\\) values have a normal distribution with mean 0, but with unequal variances. The standardized Pearson residual for a two-way table is \\[r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}(1 - p_{i+})(1 - p_{+j})}}\\] and the \\(r_{ij}\\) values do have a \\(\\sim N(0, 1)\\) distribution. \\(r_{ij}^2 &gt; 4\\) is a sign of lack of fit. The chissq.test() object includes residuals that match the manual calculation. (vitc_o - vitc_e) / sqrt(vitc_e) ## resp ## treat Cold NoCold ## Placebo -1.408787 0.6421849 ## VitaminC 1.413846 -0.6444908 vitc_chisq_test$residuals ## resp ## treat Cold NoCold ## Placebo 1.408787 -0.6421849 ## VitaminC -1.413846 0.6444908 It also includes stdres that match the manual standardized calculation. (well, no it doesn’t, but I don’t know what my mistake is.) (vitc_e - vitc_o) / sqrt(vitc_e * (1 - prop.table(vitc_o, margin = 1)) * (1 - prop.table(vitc_o, margin = 2)) ) ## resp ## treat Cold NoCold ## Placebo 2.682825 -1.877887 ## VitaminC -1.877887 2.682825 vitc_chisq_test$stdres ## resp ## treat Cold NoCold ## Placebo 2.193493 -2.193493 ## VitaminC -2.193493 2.193493 Here are the squared Pearson residuals for the CHD data. The squared Pearson residuals for CHD 0-199, 200-219, and 260+ are greater than 4, and seem to be driving the lack of independence. chd_chisq_test$residuals^2 ## L_0_199 L_200_219 L_220_259 L_260p ## CHD 4.6036904 5.2229946 0.07248954 22.704433 ## No CHD 0.3423925 0.3884523 0.00539130 1.688608 4.3.3 Difference in Proportions The difference in proportions measure is the difference in the probabilities of characteristic \\(Z\\) conditioned on two groups \\(Y = 1\\) and \\(Y = 2\\): \\(\\delta = \\pi_{1|1} - \\pi_{1|2}\\). In social sciences and epidemiology \\(\\pi_{1|1}\\) and \\(\\pi_{1|2}\\) are sometimes referred to as “risk” values. The point estimate for \\(\\delta\\) is \\(r = p_{1|1} - p_{1|2}\\). Under the normal approximation method, the sampling distribution of the difference in population proportions has a normal distribution centered at \\(d\\) with variance \\(Var(\\delta)\\). The point estimate for \\(Var(\\delta)\\) is \\(Var(d)\\). \\[Var(d) = \\frac{p_{1|1} (1 - p_{1|1})}{n_{1+}} + \\frac{p_{1|2} (1 - p_{1|2})}{n_{2+}}\\] In the vitamin C acid example, \\(\\delta\\) is the difference in the row conditional frequencies. p &lt;- prop.table(vitc_o, margin = 1) d &lt;- p[2, 1] - p[1, 1] print(d) ## [1] -0.09912641 The variance is var_d &lt;- (p[2, 1])*(1 - p[2, 1]) / sum(vitc_o[2, ]) + (p[1, 1])*(1 - p[1, 1]) / sum(vitc_o[1, ]) print(var_d) ## [1] 0.002003675 The 95% CI is d + c(-1, 1) * qnorm(.975) * sqrt(var_d) ## [1] -0.18685917 -0.01139366 This is how prop.test() without the continuity correction calculates the confidence interval. (prop.test.result &lt;- prop.test(vitc_o, correct = FALSE)) ## ## 2-sample test for equality of proportions without continuity ## correction ## ## data: vitc_o ## X-squared = 4.8114, df = 1, p-value = 0.02827 ## alternative hypothesis: two.sided ## 95 percent confidence interval: ## 0.01139366 0.18685917 ## sample estimates: ## prop 1 prop 2 ## 0.2214286 0.1223022 lcl &lt;- -round(prop.test.result$conf.int[2], 3) ucl &lt;- -round(prop.test.result$conf.int[1], 3) data.frame(d_i = -300:300 / 1000) %&gt;% mutate(density = dnorm(x = d_i, mean = d, sd = sqrt(var_d))) %&gt;% mutate(rr = ifelse(d_i &lt; lcl | d_i &gt; ucl, density, 0)) %&gt;% ggplot() + geom_line(aes(x = d_i, y = density)) + geom_area(aes(x = d_i, y = rr, fill = mf_pal(12)(12)[2]), alpha = 0.8) + geom_vline(aes(xintercept = d), color = &quot;blue&quot;) + theme_mf() + labs(title = bquote(&quot;Difference in Proportions Confidence Interval&quot;), subtitle = paste0( &quot;d = &quot;, round(d, 3) ), x = &quot;d&quot;, y = &quot;Density&quot;) + theme(legend.position=&quot;none&quot;) The normal approximation method applies when the central limit theorem conditions hold: the sample is independently drawn (random sampling without replacement from \\(n &lt; 10\\%\\) of the population in observational studies, or random assignment in experiments), there are at least \\(n_i p_i &gt;= 5\\) successes and \\(n_i (1 - p_i) &gt;= 5\\) failures for each group, the sample sizes are both \\(&gt;=30\\), and the probability of success for each group is not extreme, \\((0.2, 0.8)\\). Test \\(H_0: d = \\delta_0\\) for some hypothesized population \\(\\delta\\) (usually 0) with test statistic \\[Z = \\frac{d - \\delta_0}{se_{d}}\\] where \\[se_{d} = \\sqrt{p (1 - p) \\left( \\frac{1}{n_{1+}} + \\frac{1}{n_{2+}} \\right)}\\] approximates \\(se_{\\delta_0}\\) where \\(p\\) is the pooled proportion \\[p = \\frac{n_{11} + n_{21}}{n_{1+} + n_{2+}}.\\] p_pool &lt;- (vitc_o[1, 1] + vitc_o[2, 1]) / sum(vitc_o) se_d &lt;- sqrt(p_pool * (1 - p_pool) * (1 / sum(vitc_o[1, ]) + 1 / sum(vitc_o[2, ]))) z &lt;- (d - 0) / se_d pnorm(z) * 2 ## [1] 0.02827186 lrr = qnorm(p = .05/2, mean = 0, sd = se_d, lower.tail = TRUE) urr = qnorm(p = .05/2, mean = 0, sd = se_d, lower.tail = FALSE) data.frame(d_i = -300:300 / 1000) %&gt;% mutate(density = dnorm(x = d_i, mean = 0, sd = se_d)) %&gt;% mutate(rr = ifelse(d_i &lt; lrr | d_i &gt; urr, density, 0)) %&gt;% ggplot() + geom_line(aes(x = d_i, y = density)) + geom_area(aes(x = d_i, y = rr, fill = mf_pal(12)(12)[2]), alpha = 0.8) + geom_vline(aes(xintercept = d), color = &quot;blue&quot;) + geom_vline(aes(xintercept = 0), color = &quot;black&quot;) + theme_mf() + labs(title = &quot;Hypothesis Test of Difference in Proportions&quot;, subtitle = paste0( &quot;d = &quot;, round(d, 3), &quot; (Z = &quot;, round(z, 2), &quot;, p = &quot;, round(pnorm(z) * 2, 4), &quot;).&quot; ), x = &quot;d&quot;, y = &quot;Density&quot;) + theme(legend.position=&quot;none&quot;) The null hypothesis \\(H_0: \\delta_0 = 0\\) is equivalent to saying that two variables are independent, \\(\\pi_{1|1} = \\pi_{1|2}\\), so you can also use the \\(\\chi^2\\) or \\(G^2\\) test for independence in a 2 × 2. That’s what prop.test() is doing. The square of the z-statistic is algebraically equal to \\(\\chi^2\\). The two-sided test comparing \\(Z\\) to a \\(N(0, 1)\\) is identical to comparing \\(\\chi^2\\) to a chi-square distribution with df = 1. Compare the \\(Z^2\\) to the output from prop.test(). z^2 ## [1] 4.811413 prop.test.result$statistic ## X-squared ## 4.811413 The difference in proportions is easy to interpret, but when \\(Z = 1\\) is a rare event, the individual probabilities \\(\\pi_{1|1}\\) and \\(\\pi_{1|2}\\) are both small and \\(\\delta\\) is nearly zero even when the effect is strong. In the CHD study, two of the conditional probabilities of CHD within the four cholesterol groups are similar, 0-199 (0.038) and 200-219 (.031). round(prop.table(chd_o, margin = 2), 3) ## L_0_199 L_200_219 L_220_259 L_260p ## CHD 0.038 0.031 0.066 0.143 ## No CHD 0.962 0.969 0.934 0.857 Is the difference in these proportions statistically signficant? You can test this with the difference in proportions test or a chisq test. prop.test(t(chd_o[, c(1:2)])) ## ## 2-sample test for equality of proportions with continuity correction ## ## data: t(chd_o[, c(1:2)]) ## X-squared = 0.028064, df = 1, p-value = 0.867 ## alternative hypothesis: two.sided ## 95 percent confidence interval: ## -0.02736931 0.03961229 ## sample estimates: ## prop 1 prop 2 ## 0.03761755 0.03149606 chisq.test(t(chd_o[, c(1:2)])) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: t(chd_o[, c(1:2)]) ## X-squared = 0.028064, df = 1, p-value = 0.867 You could go on to try other pairwise tests to establish which levels differ from the others. 4.3.4 Relative Risk The relative risk measure is the ratio of the probabilities of characteristic \\(Z\\) conditioned on two groups \\(Y = 1\\) and \\(Y = 2\\): \\(\\rho = \\pi_{1|1} / \\pi_{1|2}\\). In social sciences and epidemiology \\(\\rho\\) is sometimes referred to as the “relative risk”. The point estimate for \\(\\rho\\) is \\(r = p_{1|1} / p_{1|2}\\). Because \\(\\rho\\) is non-negative, a normal approximation for \\(\\log \\rho\\) has a less skewed distribution than \\(\\rho\\). The approximate variance of \\(\\log \\rho\\) is \\[Var(\\log \\rho) = \\frac{1 - \\pi_{11}/\\pi_{1+}}{n_{1+}\\pi_{11}/\\pi_{1+}} + \\frac{1 - \\pi_{21}/\\pi_{2+}}{n_{2+}\\pi_{21}/\\pi_{2+}}\\] and is estimated by \\[Var(\\log r) = \\left( \\frac{1}{n_{11}} - \\frac{1}{n_{1+}} \\right) + \\left( \\frac{1}{n_{21}} - \\frac{1}{n_{2+}} \\right)\\] In the vitamin C acid example, \\(r\\) is the ratio of the row conditional frequencies. vitc_prop &lt;- prop.table(vitc_o, margin = 1) vitc_risk &lt;- vitc_prop[2, 1] / vitc_prop[1, 1] print(vitc_risk) ## [1] 0.5523323 The variance is vitc_risk_var &lt;- 1 / vitc_o[1, 1] - 1 / sum(vitc_o[1, ]) + 1 / vitc_o[2, 1] - 1 / sum(vitc_o[2, ]) print(vitc_risk_var) ## [1] 0.07674449 The 95% CI is exp(log(vitc_risk) + c(-1, 1) * qnorm(.975) * sqrt(vitc_risk_var)) ## [1] 0.3209178 0.9506203 Thus, at 0.05 level, you can reject the independence model. People taking vitamin C are half as likely to catch a cold. In the CHD study, you could summarize the relationship between CHD and cholesterol level by a set of three relative risks using 0-199 as the baseline: 200–219 versus 0–199, 220–259 versus 0–199, and 260+ versus 0–199. (chd_prop &lt;- prop.table(chd_o, margin = 2)) ## L_0_199 L_200_219 L_220_259 L_260p ## CHD 0.03761755 0.03149606 0.06595745 0.1433566 ## No CHD 0.96238245 0.96850394 0.93404255 0.8566434 (chd_risk &lt;- chd_prop[1, ] / chd_prop[1, 1]) ## L_0_199 L_200_219 L_220_259 L_260p ## 1.0000000 0.8372703 1.7533688 3.8108974 4.3.5 Odds Ratio The odds ratio is the most commonly used measure of association. It is also a natural parameter for many of the log-linear and logistic models. The odds is the ratio of probabilities of “success” and “failure”. When conditioned on a variable, the odds ratio is \\[\\theta = \\frac{\\pi_{1|1} / \\pi_{2|1}} {\\pi_{1|2} / \\pi_{2|2}}\\] and is estimated by the sample frequencies \\[\\hat{\\theta} = \\frac{n_{11} n_{22}} {n_{12} n_{21}}\\] The log-odds ratio has a better normal approximation than the odds ratio, so define the confidence interval on the log scale. \\[Var(\\log \\hat{\\theta}) = \\frac{1}{n_{11}} + \\frac{1}{n_{12}} + \\frac{1}{n_{21}} + \\frac{1}{n_{22}}\\] For the Vitamin C example, the odds of getting a cold given a skier took vitamin C, are The odds of getting a cold after taking a placebo pill are \\(0.22 / 0.78 = 0.28\\) and the odds of getting a cold after taking Vitamin C are \\(0.12 / 0.88 = 0.14\\). vitc_odds &lt;- vitc_prop[, 1] / vitc_prop[, 2] print(vitc_odds) ## Placebo VitaminC ## 0.2844037 0.1393443 The odds of getting a cold given vitamin C are \\(0.14 / 0.28 = 0.49\\) times the odds of getting cold given a placebo. vitc_theta_hat &lt;- vitc_odds[2] / vitc_odds[1] print(vitc_theta_hat) ## VitaminC ## 0.4899524 with variance var_vitc_theta_hat &lt;- sum(1 / vitc_o) The 95% CI is z_alpha &lt;- qnorm(p = 0.975) exp(log(vitc_theta_hat) + c(-1, 1) * z_alpha * sqrt(var_vitc_theta_hat)) ## [1] 0.2569419 0.9342709 Keep in mind the following properties of odds ratios. You can convert an odds pack to probabilities by solving \\(\\pi / (1 - \\pi)\\) for \\(\\pi = odds / (1 + odds)\\). If two variables are independent, then the conditional probabilities \\(\\pi_{1|1}\\) and \\(\\pi_{1|2}\\) will be equal and therefore the odds ratio will equal 1. If \\(\\pi_{1|1} &gt; \\pi_{1|2}\\) then the odds ratio will be \\(1 &lt; \\theta &lt; \\infty\\). If \\(\\pi_{1|1} &lt; \\pi_{1|2}\\) then the odds ratio will be \\(0 &lt; \\theta &lt; 1\\). the sample odds ratio will equal \\(0\\) or \\(\\infty\\) if any \\(n_{ij} = 0\\). If you have any empty cells add 1/2 to each cell count. "],
["example-of-chi-square-test-of-homogeneity.html", "4.4 Example of Chi-Square Test of Homogeneity", " 4.4 Example of Chi-Square Test of Homogeneity A project studied whether attending physicians order more unnecessary blood transfusions than residents. The categorical variable frequency of orders has 4 levels: frequently, occasionally, rarely, and never. library(dplyr) library(ggplot2) library(stats) pop &lt;- NULL pop[1:49] &lt;- 1 pop[50:120] &lt;- 2 lev &lt;- NULL lev[c(1:2, 50:64)] &lt;- 1 lev[c(3:5, 65:92)] &lt;- 2 lev[c(6:36, 93:115)] &lt;- 3 lev[c(37:49, 116:120)] &lt;- 4 dat &lt;- data.frame(pop, lev) dat$pop &lt;- factor(dat$pop, levels = c(1, 2), labels = c(&quot;attending&quot;, &quot;resident&quot;)) dat$lev &lt;- factor(dat$lev, levels = c(1, 2, 3, 4), labels = c(&quot;frequently&quot;, &quot;occasionally&quot;, &quot;rarely&quot;, &quot;never&quot;)) df &lt;- (2-1)*(4-1) alpha &lt;- 0.05 (test &lt;- chisq.test(dat$lev, dat$pop)) ## ## Pearson&#39;s Chi-squared test ## ## data: dat$lev and dat$pop ## X-squared = 31.881, df = 3, p-value = 5.543e-07 # Graph of hypothesis test lrr = -Inf urr = qchisq(p = alpha, df = df, lower.tail = FALSE) data.frame(xi = 0:400 / 10) %&gt;% mutate(density = dchisq(x = xi, df = df)) %&gt;% mutate(rr = ifelse(xi &lt; lrr | xi &gt; urr, density, 0)) %&gt;% ggplot() + geom_line(aes(x = xi, y = density), color = &quot;black&quot;) + geom_area(aes(x = xi, y = rr), fill = &quot;red&quot;, alpha = 0.3) + geom_vline(aes(xintercept = test$statistic), color = &quot;blue&quot;) + labs(title = bquote(&quot;Chi-Square Test for Homogeneity&quot;), subtitle = bquote(&quot;P-value =&quot;~.(test$p.value)), x = &quot;xi^2&quot;, y = &quot;Density&quot;) + theme(legend.position=&quot;none&quot;) "]
]
