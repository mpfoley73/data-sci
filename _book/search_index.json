[
["survival-analysis.html", "Chapter 14 Survival Analysis", " Chapter 14 Survival Analysis These notes rely on the Survival Analysis in R DataCamp course and Applied Survival Analysis Using R by Dirk Moore (Moore 2016). Survival analysis models time to event. Whereas linear regression outcomes are assumed to have a normal distribution, time-to-event outcomes are assumed to have a Weibull or exponential distribution. Survival analysis also deals with censoring (unknown starting event and/or ending event). Most surival analysis uses the survival package for modeling and the survminer package for visualization. library(tidyverse) library(survival) library(survminer) References "],
["survival-theory.html", "14.1 Survival Theory", " 14.1 Survival Theory This section reviews the fundamentals of survival analysis, including the hazard probability density, and survival functions. You can specify the survival distribution function either as a survival function or as a hazard function. The survival function is the probability of surviving up to time \\(t\\), \\[S(t) = 1 - F(t) = pr(T &gt; t), \\hspace{3mm} 0 &lt; t &lt; \\infty\\] where \\(F(t) = Pr(T \\le t), \\hspace{3mm} 0 &lt; t &lt; \\infty\\) is the cumulative risk function. The hazard function is the instantaneous death rate given survival up to time \\(t\\), \\[h(t) = \\lim_{\\delta \\rightarrow 0}{\\frac{pr(t &lt; T &lt; t + \\delta|T &gt; t)}{\\delta}}.\\] The survival function and the hazard function are related. The probability of dying during the interval \\((t, t + \\delta)\\), \\(f(t) = F&#39;(t)\\), is the probability of dying during \\(t + \\delta\\) given survival up to point \\(t\\) times the probability of surviving up to point \\(t\\), \\(f(t) = h(t) S(t)\\). \\(S(t)\\) is also the exponent of the negative cumulative hazard function, \\[S(t) = e^{-H(t)}.\\] You can use the survival function to estimate the mean and median survival times. The mean survival time is \\(E(T) = \\int S(t)dt\\). The median survival time is \\(S(t) = 0.5\\). "],
["survival-curve-estimation.html", "14.2 Survival Curve Estimation", " 14.2 Survival Curve Estimation There are parametric and non-parametric methods to estimate a survivor curve. The usual non-parametric method is the Kaplan-Meier estimator. The usual parametric method is the Weibull distribution, of which the exponential distribution is a special case. In between the two is the Cox proportional hazards model, the most common way to estimate a survivor curve. 14.2.1 Kaplan-Meier The Kaplan-Meier estimator for the survival function is \\[\\hat{S} = \\prod_{i: t_i &lt; t}{\\frac{n_i - d_i}{n_i}}\\] where \\(n_i\\) is the number of persons under observation at time \\(i\\) and \\(d_i\\) is the number of individuals dying at time \\(i\\). The Kaplan-Meier curve falls only when a subject dies, not when a subject is censored. Calculate the Kaplan-Meier estimate with the survfit() function. Here is an example of a Kaplan-Meier survival function estimate. GBSG2 contains time to death of 686 breast cancer patients. Column cens indicates whether or not a person in the study has died (0-censored, 1-event). data(GBSG2, package = &quot;TH.data&quot;) head(GBSG2) ## horTh age menostat tsize tgrade pnodes progrec estrec time cens ## 1 no 70 Post 21 II 3 48 66 1814 1 ## 2 yes 56 Post 12 II 7 61 77 2018 1 ## 3 yes 58 Post 35 II 9 52 271 712 1 ## 4 yes 59 Post 17 II 4 60 29 1807 1 ## 5 no 73 Post 35 II 1 26 65 772 1 ## 6 no 32 Pre 57 III 24 0 13 448 1 survfit() creates survival curves from a formula or from a previously fitted Cox model. The formula below is an intercept-only model. Structure the response variable as a Surv object. km_fit &lt;- survfit(Surv(time, cens) ~ 1, data = GBSG2) km_fit ## Call: survfit(formula = Surv(time, cens) ~ 1, data = GBSG2) ## ## n events median 0.95LCL 0.95UCL ## 686 299 1807 1587 2030 Plot the fitted model with ggsurvplot(). The plus sign (“+”) indicates censored observations. ggsurvplot( fit = km_fit, linetype = 1, surv.median.line = &quot;hv&quot;, title = &quot;Kaplan-Meier Survival Function Estimate&quot; ) Several parametric distributions are available for modeling survival data. The exponential distribution is the easiest to use because it has a constant hazard \\(h(t) = \\lambda\\). The cumulative hazard is \\(H(t) = \\int_0^t \\lambda dt = \\lambda t\\) and the corresponding survival function is \\[S(t) = e^{-H(t)} = e^{-\\lambda t}.\\] The expected survival time is \\(E(T) = \\int_0^\\infty S(t)dt = \\int_0^\\infty d^{-\\lambda t} dt = 1 / \\lambda.\\). The median survival time is \\(S(t) = e^{-\\lambda t} = 0.5\\), or \\(t_{med} = \\log(2) / \\lambda\\). The Weibull distribution is more appropriate for modeling lifetimes, however. The Weibull hazard function is \\(h(t) = \\alpha \\lambda (\\lambda t)^{\\alpha - 1} = \\alpha \\lambda^\\alpha t^{\\alpha-1}\\). data.frame(t = rep(1:80, 3), alpha = c(rep(1.5, 80), rep(1, 80), rep(0.75, 80)), lambda = rep(0.03, 240)) %&gt;% mutate( f = dweibull(x = t, shape = alpha, scale = 1 / 0.03), S = pweibull(q = t, shape = alpha, scale = 1 / 0.03, lower.tail = FALSE), h = f / S # same as alpha * lambda^alpha * t^(alpha-1) ) %&gt;% ggplot(aes(x = t, y = h, color = as.factor(alpha))) + geom_line() + theme(legend.position = &quot;top&quot;) + labs(y = &quot;hazard&quot;, x = &quot;time&quot;, color = &quot;alpha&quot;, title = &quot;Weibul hazard function at varying levels of alpha&quot;, subtitle = &quot;Lambda = 0.03&quot;, caption = &quot;alpha = 1 is special case of exponential function.&quot;) The cumulative hazard function is \\(H(t) = (\\lambda t)^\\alpha\\) and the corresponding survival function is \\[S(t) = e^{-(\\lambda t)^\\alpha}.\\] The exponential distribution is a special case of the Weibull where \\(\\alpha = 1\\). The expected survival time is \\(E(t) = \\frac{\\Gamma (1 + 1 / \\alpha)}{\\lambda}\\). The median survival time is \\(t_{med} = \\frac{[\\log(2)]^{1 / \\alpha}}{\\lambda}\\) The Kaplan-Meier estimate is used mainly as a descriptive tool. The Weibull model produces a smooth survival curve instead of a step function. The Weibull model assumes a Weibull distribution. Fit a Weibull model with the survreg() function. wb &lt;- survreg(Surv(time, cens) ~ 1, data = GBSG2) # 90% of patients survive beyond time point 385 # Alternatively, 10% of patients die at time 385 predict(wb, type = &quot;quantile&quot;, p = 1 - 0.9, newdata = data.frame(1)) ## 1 ## 384.9947 # The median survival time is 1694 predict(wb, type = &quot;quantile&quot;, p = 1 - 0.5, newdata = data.frame(1)) ## 1 ## 1693.93 surv &lt;- seq(.99, .01, by = -.01) t &lt;- predict(wb, type = &quot;quantile&quot;, p = 1 - surv, newdata = data.frame(1)) head(data.frame(time = t, surv = surv)) ## time surv ## 1 60.6560 0.99 ## 2 105.0392 0.98 ## 3 145.0723 0.97 ## 4 182.6430 0.96 ## 5 218.5715 0.95 ## 6 253.3125 0.94 surv_wb &lt;- data.frame(time = t, surv = surv, upper = NA, lower = NA, std.err = NA) ggsurvplot_df(fit = surv_wb, surv.geom = geom_line) Fit a Weibull model controlling for hormonal therapy horTh and tumor size tsize. wbmod &lt;- survreg(Surv(time, cens) ~ horTh + tsize, data = GBSG2) coef(wbmod) ## (Intercept) horThyes tsize ## 7.96069769 0.31175602 -0.01218073 summary(wbmod) ## ## Call: ## survreg(formula = Surv(time, cens) ~ horTh + tsize, data = GBSG2) ## Value Std. Error z p ## (Intercept) 7.96070 0.10413 76.45 &lt; 2e-16 ## horThyes 0.31176 0.09602 3.25 0.0012 ## tsize -0.01218 0.00272 -4.47 7.8e-06 ## Log(scale) -0.26494 0.04952 -5.35 8.8e-08 ## ## Scale= 0.767 ## ## Weibull distribution ## Loglik(model)= -2623.2 Loglik(intercept only)= -2637.3 ## Chisq= 28.17 on 2 degrees of freedom, p= 7.6e-07 ## Number of Newton-Raphson Iterations: 5 ## n= 686 surv &lt;- seq(.99, .01, by = -.01) newdata &lt;- expand.grid( horTh = levels(GBSG2$horTh), tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.50, 0.75)) ) t &lt;- predict(wbmod, type = &quot;quantile&quot;, p = 1 - surv, newdata = newdata) surv_wbmod &lt;- surv_wbmod_wide &lt;- cbind(newdata, t) %&gt;% pivot_longer(names_to = &quot;surv_id&quot;, values_to = &quot;time&quot;, cols = -c(1:2)) %&gt;% mutate(tsize = as.numeric(tsize), surv_id = as.factor(as.numeric(surv_id))) %&gt;% data.frame() surv_wbmod$surv = surv[as.numeric(surv_wbmod$surv_id)] surv_wbmod$upper = NA surv_wbmod$lower = NA surv_wbmod$std.err = NA surv_wbmod$strata = NA surv_wbmod[, c(&quot;upper&quot;, &quot;lower&quot;, &quot;std.err&quot;, &quot;strata&quot;)] &lt;- NA ggsurvplot_df(surv_wbmod, surv.geom = geom_line, linetype = &quot;horTh&quot;, color = &quot;tsize&quot;, legend.title = NULL) Interpret the coefficient as the probability of surviving falls by 0.012 per unit increase in the tumor size and increases by 0.312 if taking hormonal therapy. You can fit other models with the dist = c(\"lognormal\", \"exponential\") parameter. The Cox model (aka, proportional hazards model) is the most widely used model for survival analysis. Whereas the Weibull model is fully parametric, the Cox model is semi-parameteric. Fit a Cox proportional hazards model with coxph(). Negative values indicate a longer survival period. cxmod &lt;- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2) coef(cxmod) ## horThyes tsize ## -0.37358834 0.01525192 newdata &lt;- expand.grid( horTh = levels(GBSG2$horTh), tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.50, 0.75)) ) rownames(newdata) &lt;- letters[1:6] # Create survival curves. The rownames show up in the model cxsf &lt;- survfit(cxmod, data = GBSG2, newdata = newdata, conf.type = &quot;none&quot;) head(cxsf$surv) ## a b c d e f ## [1,] 1 1 1 1 1 1 ## [2,] 1 1 1 1 1 1 ## [3,] 1 1 1 1 1 1 ## [4,] 1 1 1 1 1 1 ## [5,] 1 1 1 1 1 1 ## [6,] 1 1 1 1 1 1 head(cxsf$time) ## [1] 8 15 16 17 18 29 # surv_summary() creates the data.frame with a nice summary from survfit() results, including columns like time (survival time) and surv (survival probability). surv_cxmod0 &lt;- surv_summary(cxsf) # get tne correspondng new_data cols surv_cxmod &lt;- cbind(surv_cxmod0, newdata[as.character(surv_cxmod0$strata), ]) ggsurvplot_df(surv_cxmod, linetype = &quot;horTh&quot;, color = &quot;tsize&quot;, legend.title = NULL, censor = FALSE) The visualization shows that patients with smaller tumors tend to survive longer and patients who receive hormonal therapy tend to survive longer. "],
["survival-curve-estimation-1.html", "14.3 Survival Curve Estimation", " 14.3 Survival Curve Estimation When "],
["proportional-hazards-model.html", "14.4 Proportional Hazards Model", " 14.4 Proportional Hazards Model The examples in these notes use the following data sets. 14.4.1 Xelox Data from a Phase II clinical trial of Xeloda and exaliplatin given before surgery to advanced gastric cancer patients with para-aortic lymph node metastasis. timeWeeks is survival time; delta is the censoring indicator (1 = death, 0 = censored). data(gastricXelox, package = &quot;asaur&quot;) head(gastricXelox) ## timeWeeks delta ## 1 4 1 ## 2 8 1 ## 3 8 1 ## 4 8 1 ## 5 9 1 ## 6 11 1 14.4.2 pancreatic Data from a Phase II clinical trial of patients with locally advanced or metastatic pancreatic cancer. Column stage is a covariate indicating the diagnosis (LA = locally advance, M = metastatic); the event of interest is either progression or death. There was no censoring in this data because none of the subjects lived very long. data(pancreatic, package = &quot;asaur&quot;) head(pancreatic) ## stage onstudy progression death ## 1 M 12/16/2005 2/2/2006 10/19/2006 ## 2 M 1/6/2006 2/26/2006 4/19/2006 ## 3 LA 2/3/2006 8/2/2006 1/19/2007 ## 4 M 3/30/2006 . 5/11/2006 ## 5 LA 4/27/2006 3/11/2007 5/29/2007 ## 6 M 5/7/2006 6/25/2006 10/11/2006 14.4.3 prostateSurvival There are two outcomes of interest indicated by status, death from prostate cancer, and death from other causes, a competing risks survival analysis problem. data(&quot;prostateSurvival&quot;, package = &quot;asaur&quot;) head(prostateSurvival) ## grade stage ageGroup survTime status ## 1 mode T1c 80+ 18 0 ## 2 mode T1ab 75-79 23 0 ## 3 poor T1c 75-79 37 0 ## 4 mode T2 70-74 27 0 ## 5 mode T1c 70-74 42 0 ## 6 poor T2 75-79 38 2 14.4.4 pharmacoSmoking The primary outcome variable ttr is the time from randomization until relapse (return to smoking). Individuals who remained non-smokers for six months were censored. data(&quot;pharmacoSmoking&quot;, package = &quot;asaur&quot;) head(pharmacoSmoking) ## id ttr relapse grp age gender race employment yearsSmoking ## 1 21 182 0 patchOnly 36 Male white ft 26 ## 2 113 14 1 patchOnly 41 Male white other 27 ## 3 39 5 1 combination 25 Female white other 12 ## 4 80 16 1 combination 54 Male white ft 39 ## 5 87 0 1 combination 45 Male white other 30 ## 6 29 182 0 combination 43 Male hispanic ft 30 ## levelSmoking ageGroup2 ageGroup4 priorAttempts longestNoSmoke ## 1 heavy 21-49 35-49 0 0 ## 2 heavy 21-49 35-49 3 90 ## 3 heavy 21-49 21-34 3 21 ## 4 heavy 50+ 50-64 0 0 ## 5 heavy 21-49 35-49 0 0 ## 6 heavy 21-49 35-49 2 1825 14.4.5 hepatoCellular Overall and recurrence-free survival of patients with hepatocellular carcinoma. The survival outcomes are OS (overall survival) and RFS (recurrence-free survival), and the corresponding censoring indicators are Death and Recurrance. data(&quot;hepatoCellular&quot;, package = &quot;asaur&quot;) head(hepatoCellular) ## Number Age Gender HBsAg Cirrhosis ALT AST AFP Tumorsize Tumordifferentiation ## 1 1 57 0 1 1 1 2 2 2 1 ## 2 2 58 1 0 0 1 1 2 1 1 ## 3 3 65 1 0 0 1 1 2 2 2 ## 4 4 54 1 1 0 2 1 2 2 2 ## 5 5 71 1 1 0 2 2 2 2 2 ## 6 6 32 1 0 0 2 2 2 2 2 ## Vascularinvasion Tumormultiplicity Capsulation TNM BCLC OS Death RFS ## 1 0 1 0 2 1 83 0 13 ## 2 0 1 1 1 1 81 0 81 ## 3 1 1 1 2 2 79 0 79 ## 4 0 1 1 1 1 76 0 76 ## 5 1 2 0 2 2 7 1 3 ## 6 0 1 0 1 1 13 1 3 ## Recurrence CXCL17T CXCL17P CXCL17N CD4T CD4N CD8T CD8N CD20T CD20N ## 1 1 113.947238 299.325404 138.247177 2.6 0 190.6 126.8 20.95 13.05 ## 2 0 54.071542 63.468462 6.214912 NA NA NA NA NA NA ## 3 0 22.188831 34.470336 22.131934 NA NA NA NA NA NA ## 4 0 8.442809 16.002843 11.146906 NA NA NA NA NA NA ## 5 1 8.271131 22.034540 32.271196 NA NA NA NA NA NA ## 6 1 13.708073 6.423604 0.000000 NA NA NA NA NA NA ## CD57T CD57N CD15T CD15N CD68T CD68N CD4NR CD8NR CD20NR CD57NR ## 1 15.86 0 72.8 23.85 47.48125 50.29444 0 0.5925387 0.06098289 0 ## 2 NA NA NA NA NA NA NA NA NA NA ## 3 NA NA NA NA NA NA NA NA NA NA ## 4 NA NA NA NA NA NA NA NA NA NA ## 5 NA NA NA NA NA NA NA NA NA NA ## 6 NA NA NA NA NA NA NA NA NA NA ## CD15NR CD68NR CD4TR CD8TR CD20TR CD57TR CD15TR ## 1 0.1114515 0.2350269 0.007422395 0.5441186 0.05980738 0.04527661 0.2078271 ## 2 NA NA NA NA NA NA NA ## 3 NA NA NA NA NA NA NA ## 4 NA NA NA NA NA NA NA ## 5 NA NA NA NA NA NA NA ## 6 NA NA NA NA NA NA NA ## CD68TR Ki67 CD34 ## 1 0.1355479 6.0435 57079.5 ## 2 NA NA NA ## 3 NA NA NA ## 4 NA NA NA ## 5 NA NA NA ## 6 NA NA NA 14.4.6 GBSG2 14.4.7 Unemp UnempDur contains time to re-employment of 3,343 unemployed persons. data(UnempDur, package = &quot;Ecdat&quot;) Column censor1 indicates the re-employment event in a full-time job. Column spell indicates the length of time unemployed in number of two-week intervals. UnempDur %&gt;% count(censor1) ## # A tibble: 2 x 2 ## censor1 n ## &lt;dbl&gt; &lt;int&gt; ## 1 0 2270 ## 2 1 1073 sobj &lt;- Surv(time = UnempDur$spell, event = UnempDur$censor1) head(sobj) ## [1] 5 13 21 3 9+ 11+ summary(sobj) ## time status ## Min. : 1.000 Min. :0.000 ## 1st Qu.: 2.000 1st Qu.:0.000 ## Median : 5.000 Median :0.000 ## Mean : 6.248 Mean :0.321 ## 3rd Qu.: 9.000 3rd Qu.:1.000 ## Max. :28.000 Max. :1.000 "]
]
